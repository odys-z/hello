// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/types/album.proto

package com.google.photos.types.proto;

/**
 *
 *
 * <pre>
 * Options that control the sharing of an album.
 * </pre>
 *
 * Protobuf type {@code google.photos.types.SharedAlbumOptions}
 */
public final class SharedAlbumOptions extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.photos.types.SharedAlbumOptions)
    SharedAlbumOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SharedAlbumOptions.newBuilder() to construct.
  private SharedAlbumOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SharedAlbumOptions() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SharedAlbumOptions();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private SharedAlbumOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8:
            {
              isCollaborative_ = input.readBool();
              break;
            }
          case 16:
            {
              isCommentable_ = input.readBool();
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.photos.types.proto.AlbumProto
        .internal_static_google_photos_types_SharedAlbumOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.photos.types.proto.AlbumProto
        .internal_static_google_photos_types_SharedAlbumOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.photos.types.proto.SharedAlbumOptions.class,
            com.google.photos.types.proto.SharedAlbumOptions.Builder.class);
  }

  public static final int IS_COLLABORATIVE_FIELD_NUMBER = 1;
  private boolean isCollaborative_;
  /**
   *
   *
   * <pre>
   * True if the shared album allows collaborators (users who have joined
   * the album) to add media items to it. Defaults to false.
   * </pre>
   *
   * <code>bool is_collaborative = 1;</code>
   *
   * @return The isCollaborative.
   */
  @java.lang.Override
  public boolean getIsCollaborative() {
    return isCollaborative_;
  }

  public static final int IS_COMMENTABLE_FIELD_NUMBER = 2;
  private boolean isCommentable_;
  /**
   *
   *
   * <pre>
   * True if the shared album allows collaborators (users who have joined the
   * album) to add comments to the album. Defaults to false.
   * </pre>
   *
   * <code>bool is_commentable = 2;</code>
   *
   * @return The isCommentable.
   */
  @java.lang.Override
  public boolean getIsCommentable() {
    return isCommentable_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (isCollaborative_ != false) {
      output.writeBool(1, isCollaborative_);
    }
    if (isCommentable_ != false) {
      output.writeBool(2, isCommentable_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (isCollaborative_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, isCollaborative_);
    }
    if (isCommentable_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, isCommentable_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.photos.types.proto.SharedAlbumOptions)) {
      return super.equals(obj);
    }
    com.google.photos.types.proto.SharedAlbumOptions other =
        (com.google.photos.types.proto.SharedAlbumOptions) obj;

    if (getIsCollaborative() != other.getIsCollaborative()) return false;
    if (getIsCommentable() != other.getIsCommentable()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + IS_COLLABORATIVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIsCollaborative());
    hash = (37 * hash) + IS_COMMENTABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIsCommentable());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.types.proto.SharedAlbumOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.photos.types.proto.SharedAlbumOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Options that control the sharing of an album.
   * </pre>
   *
   * Protobuf type {@code google.photos.types.SharedAlbumOptions}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.photos.types.SharedAlbumOptions)
      com.google.photos.types.proto.SharedAlbumOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.photos.types.proto.AlbumProto
          .internal_static_google_photos_types_SharedAlbumOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.photos.types.proto.AlbumProto
          .internal_static_google_photos_types_SharedAlbumOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.photos.types.proto.SharedAlbumOptions.class,
              com.google.photos.types.proto.SharedAlbumOptions.Builder.class);
    }

    // Construct using com.google.photos.types.proto.SharedAlbumOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      isCollaborative_ = false;

      isCommentable_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.photos.types.proto.AlbumProto
          .internal_static_google_photos_types_SharedAlbumOptions_descriptor;
    }

    @java.lang.Override
    public com.google.photos.types.proto.SharedAlbumOptions getDefaultInstanceForType() {
      return com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.photos.types.proto.SharedAlbumOptions build() {
      com.google.photos.types.proto.SharedAlbumOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.photos.types.proto.SharedAlbumOptions buildPartial() {
      com.google.photos.types.proto.SharedAlbumOptions result =
          new com.google.photos.types.proto.SharedAlbumOptions(this);
      result.isCollaborative_ = isCollaborative_;
      result.isCommentable_ = isCommentable_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.photos.types.proto.SharedAlbumOptions) {
        return mergeFrom((com.google.photos.types.proto.SharedAlbumOptions) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.photos.types.proto.SharedAlbumOptions other) {
      if (other == com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance())
        return this;
      if (other.getIsCollaborative() != false) {
        setIsCollaborative(other.getIsCollaborative());
      }
      if (other.getIsCommentable() != false) {
        setIsCommentable(other.getIsCommentable());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.photos.types.proto.SharedAlbumOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.photos.types.proto.SharedAlbumOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean isCollaborative_;
    /**
     *
     *
     * <pre>
     * True if the shared album allows collaborators (users who have joined
     * the album) to add media items to it. Defaults to false.
     * </pre>
     *
     * <code>bool is_collaborative = 1;</code>
     *
     * @return The isCollaborative.
     */
    @java.lang.Override
    public boolean getIsCollaborative() {
      return isCollaborative_;
    }
    /**
     *
     *
     * <pre>
     * True if the shared album allows collaborators (users who have joined
     * the album) to add media items to it. Defaults to false.
     * </pre>
     *
     * <code>bool is_collaborative = 1;</code>
     *
     * @param value The isCollaborative to set.
     * @return This builder for chaining.
     */
    public Builder setIsCollaborative(boolean value) {

      isCollaborative_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * True if the shared album allows collaborators (users who have joined
     * the album) to add media items to it. Defaults to false.
     * </pre>
     *
     * <code>bool is_collaborative = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIsCollaborative() {

      isCollaborative_ = false;
      onChanged();
      return this;
    }

    private boolean isCommentable_;
    /**
     *
     *
     * <pre>
     * True if the shared album allows collaborators (users who have joined the
     * album) to add comments to the album. Defaults to false.
     * </pre>
     *
     * <code>bool is_commentable = 2;</code>
     *
     * @return The isCommentable.
     */
    @java.lang.Override
    public boolean getIsCommentable() {
      return isCommentable_;
    }
    /**
     *
     *
     * <pre>
     * True if the shared album allows collaborators (users who have joined the
     * album) to add comments to the album. Defaults to false.
     * </pre>
     *
     * <code>bool is_commentable = 2;</code>
     *
     * @param value The isCommentable to set.
     * @return This builder for chaining.
     */
    public Builder setIsCommentable(boolean value) {

      isCommentable_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * True if the shared album allows collaborators (users who have joined the
     * album) to add comments to the album. Defaults to false.
     * </pre>
     *
     * <code>bool is_commentable = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIsCommentable() {

      isCommentable_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.photos.types.SharedAlbumOptions)
  }

  // @@protoc_insertion_point(class_scope:google.photos.types.SharedAlbumOptions)
  private static final com.google.photos.types.proto.SharedAlbumOptions DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.photos.types.proto.SharedAlbumOptions();
  }

  public static com.google.photos.types.proto.SharedAlbumOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SharedAlbumOptions> PARSER =
      new com.google.protobuf.AbstractParser<SharedAlbumOptions>() {
        @java.lang.Override
        public SharedAlbumOptions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SharedAlbumOptions(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<SharedAlbumOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SharedAlbumOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.photos.types.proto.SharedAlbumOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}

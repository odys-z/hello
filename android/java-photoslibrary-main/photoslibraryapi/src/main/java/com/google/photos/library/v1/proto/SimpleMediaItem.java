// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

/**
 *
 *
 * <pre>
 * A simple media item to be created in Google Photos via an upload token.
 * </pre>
 *
 * Protobuf type {@code google.photos.library.v1.SimpleMediaItem}
 */
public final class SimpleMediaItem extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.photos.library.v1.SimpleMediaItem)
    SimpleMediaItemOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SimpleMediaItem.newBuilder() to construct.
  private SimpleMediaItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SimpleMediaItem() {
    uploadToken_ = "";
    fileName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SimpleMediaItem();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private SimpleMediaItem(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              uploadToken_ = s;
              break;
            }
          case 18:
            {
              java.lang.String s = input.readStringRequireUtf8();

              fileName_ = s;
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_SimpleMediaItem_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_SimpleMediaItem_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.photos.library.v1.proto.SimpleMediaItem.class,
            com.google.photos.library.v1.proto.SimpleMediaItem.Builder.class);
  }

  public static final int UPLOAD_TOKEN_FIELD_NUMBER = 1;
  private volatile java.lang.Object uploadToken_;
  /**
   *
   *
   * <pre>
   * Token identifying the media bytes that have been uploaded to Google.
   * </pre>
   *
   * <code>string upload_token = 1;</code>
   *
   * @return The uploadToken.
   */
  @java.lang.Override
  public java.lang.String getUploadToken() {
    java.lang.Object ref = uploadToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uploadToken_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Token identifying the media bytes that have been uploaded to Google.
   * </pre>
   *
   * <code>string upload_token = 1;</code>
   *
   * @return The bytes for uploadToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getUploadTokenBytes() {
    java.lang.Object ref = uploadToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      uploadToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILE_NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object fileName_;
  /**
   *
   *
   * <pre>
   * File name with extension of the media item. This is shown to the user in
   * Google Photos. The file name specified during the &lt;a
   * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
   * upload process&lt;/a&gt; is ignored if this field is set. The file name,
   * including the file extension, shouldn't be more than 255 characters. This
   * is an optional field.
   * </pre>
   *
   * <code>string file_name = 2;</code>
   *
   * @return The fileName.
   */
  @java.lang.Override
  public java.lang.String getFileName() {
    java.lang.Object ref = fileName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * File name with extension of the media item. This is shown to the user in
   * Google Photos. The file name specified during the &lt;a
   * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
   * upload process&lt;/a&gt; is ignored if this field is set. The file name,
   * including the file extension, shouldn't be more than 255 characters. This
   * is an optional field.
   * </pre>
   *
   * <code>string file_name = 2;</code>
   *
   * @return The bytes for fileName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getFileNameBytes() {
    java.lang.Object ref = fileName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      fileName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getUploadTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uploadToken_);
    }
    if (!getFileNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fileName_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getUploadTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uploadToken_);
    }
    if (!getFileNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fileName_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.photos.library.v1.proto.SimpleMediaItem)) {
      return super.equals(obj);
    }
    com.google.photos.library.v1.proto.SimpleMediaItem other =
        (com.google.photos.library.v1.proto.SimpleMediaItem) obj;

    if (!getUploadToken().equals(other.getUploadToken())) return false;
    if (!getFileName().equals(other.getFileName())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + UPLOAD_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getUploadToken().hashCode();
    hash = (37 * hash) + FILE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getFileName().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.photos.library.v1.proto.SimpleMediaItem prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A simple media item to be created in Google Photos via an upload token.
   * </pre>
   *
   * Protobuf type {@code google.photos.library.v1.SimpleMediaItem}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.photos.library.v1.SimpleMediaItem)
      com.google.photos.library.v1.proto.SimpleMediaItemOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_SimpleMediaItem_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_SimpleMediaItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.photos.library.v1.proto.SimpleMediaItem.class,
              com.google.photos.library.v1.proto.SimpleMediaItem.Builder.class);
    }

    // Construct using com.google.photos.library.v1.proto.SimpleMediaItem.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      uploadToken_ = "";

      fileName_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_SimpleMediaItem_descriptor;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.SimpleMediaItem getDefaultInstanceForType() {
      return com.google.photos.library.v1.proto.SimpleMediaItem.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.SimpleMediaItem build() {
      com.google.photos.library.v1.proto.SimpleMediaItem result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.SimpleMediaItem buildPartial() {
      com.google.photos.library.v1.proto.SimpleMediaItem result =
          new com.google.photos.library.v1.proto.SimpleMediaItem(this);
      result.uploadToken_ = uploadToken_;
      result.fileName_ = fileName_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.photos.library.v1.proto.SimpleMediaItem) {
        return mergeFrom((com.google.photos.library.v1.proto.SimpleMediaItem) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.photos.library.v1.proto.SimpleMediaItem other) {
      if (other == com.google.photos.library.v1.proto.SimpleMediaItem.getDefaultInstance())
        return this;
      if (!other.getUploadToken().isEmpty()) {
        uploadToken_ = other.uploadToken_;
        onChanged();
      }
      if (!other.getFileName().isEmpty()) {
        fileName_ = other.fileName_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.photos.library.v1.proto.SimpleMediaItem parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.photos.library.v1.proto.SimpleMediaItem) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object uploadToken_ = "";
    /**
     *
     *
     * <pre>
     * Token identifying the media bytes that have been uploaded to Google.
     * </pre>
     *
     * <code>string upload_token = 1;</code>
     *
     * @return The uploadToken.
     */
    public java.lang.String getUploadToken() {
      java.lang.Object ref = uploadToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uploadToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Token identifying the media bytes that have been uploaded to Google.
     * </pre>
     *
     * <code>string upload_token = 1;</code>
     *
     * @return The bytes for uploadToken.
     */
    public com.google.protobuf.ByteString getUploadTokenBytes() {
      java.lang.Object ref = uploadToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        uploadToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Token identifying the media bytes that have been uploaded to Google.
     * </pre>
     *
     * <code>string upload_token = 1;</code>
     *
     * @param value The uploadToken to set.
     * @return This builder for chaining.
     */
    public Builder setUploadToken(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      uploadToken_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Token identifying the media bytes that have been uploaded to Google.
     * </pre>
     *
     * <code>string upload_token = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUploadToken() {

      uploadToken_ = getDefaultInstance().getUploadToken();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Token identifying the media bytes that have been uploaded to Google.
     * </pre>
     *
     * <code>string upload_token = 1;</code>
     *
     * @param value The bytes for uploadToken to set.
     * @return This builder for chaining.
     */
    public Builder setUploadTokenBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      uploadToken_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fileName_ = "";
    /**
     *
     *
     * <pre>
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the &lt;a
     * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
     * upload process&lt;/a&gt; is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     * </pre>
     *
     * <code>string file_name = 2;</code>
     *
     * @return The fileName.
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the &lt;a
     * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
     * upload process&lt;/a&gt; is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     * </pre>
     *
     * <code>string file_name = 2;</code>
     *
     * @return The bytes for fileName.
     */
    public com.google.protobuf.ByteString getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the &lt;a
     * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
     * upload process&lt;/a&gt; is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     * </pre>
     *
     * <code>string file_name = 2;</code>
     *
     * @param value The fileName to set.
     * @return This builder for chaining.
     */
    public Builder setFileName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      fileName_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the &lt;a
     * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
     * upload process&lt;/a&gt; is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     * </pre>
     *
     * <code>string file_name = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFileName() {

      fileName_ = getDefaultInstance().getFileName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the &lt;a
     * href="https://developers.google.com/photos/library/guides/upload-media"&gt;byte
     * upload process&lt;/a&gt; is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     * </pre>
     *
     * <code>string file_name = 2;</code>
     *
     * @param value The bytes for fileName to set.
     * @return This builder for chaining.
     */
    public Builder setFileNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      fileName_ = value;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.photos.library.v1.SimpleMediaItem)
  }

  // @@protoc_insertion_point(class_scope:google.photos.library.v1.SimpleMediaItem)
  private static final com.google.photos.library.v1.proto.SimpleMediaItem DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.photos.library.v1.proto.SimpleMediaItem();
  }

  public static com.google.photos.library.v1.proto.SimpleMediaItem getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SimpleMediaItem> PARSER =
      new com.google.protobuf.AbstractParser<SimpleMediaItem>() {
        @java.lang.Override
        public SimpleMediaItem parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SimpleMediaItem(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<SimpleMediaItem> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SimpleMediaItem> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.photos.library.v1.proto.SimpleMediaItem getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}

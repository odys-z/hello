// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

/**
 *
 *
 * <pre>
 * Filters that can be applied to a media item search.
 * If multiple filter options are specified, they're treated as AND with each
 * other.
 * </pre>
 *
 * Protobuf type {@code google.photos.library.v1.Filters}
 */
public final class Filters extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.photos.library.v1.Filters)
    FiltersOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Filters.newBuilder() to construct.
  private Filters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Filters() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Filters();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private Filters(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              com.google.photos.library.v1.proto.DateFilter.Builder subBuilder = null;
              if (dateFilter_ != null) {
                subBuilder = dateFilter_.toBuilder();
              }
              dateFilter_ =
                  input.readMessage(
                      com.google.photos.library.v1.proto.DateFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dateFilter_);
                dateFilter_ = subBuilder.buildPartial();
              }

              break;
            }
          case 18:
            {
              com.google.photos.library.v1.proto.ContentFilter.Builder subBuilder = null;
              if (contentFilter_ != null) {
                subBuilder = contentFilter_.toBuilder();
              }
              contentFilter_ =
                  input.readMessage(
                      com.google.photos.library.v1.proto.ContentFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(contentFilter_);
                contentFilter_ = subBuilder.buildPartial();
              }

              break;
            }
          case 26:
            {
              com.google.photos.library.v1.proto.MediaTypeFilter.Builder subBuilder = null;
              if (mediaTypeFilter_ != null) {
                subBuilder = mediaTypeFilter_.toBuilder();
              }
              mediaTypeFilter_ =
                  input.readMessage(
                      com.google.photos.library.v1.proto.MediaTypeFilter.parser(),
                      extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mediaTypeFilter_);
                mediaTypeFilter_ = subBuilder.buildPartial();
              }

              break;
            }
          case 32:
            {
              includeArchivedMedia_ = input.readBool();
              break;
            }
          case 40:
            {
              excludeNonAppCreatedData_ = input.readBool();
              break;
            }
          case 58:
            {
              com.google.photos.library.v1.proto.FeatureFilter.Builder subBuilder = null;
              if (featureFilter_ != null) {
                subBuilder = featureFilter_.toBuilder();
              }
              featureFilter_ =
                  input.readMessage(
                      com.google.photos.library.v1.proto.FeatureFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(featureFilter_);
                featureFilter_ = subBuilder.buildPartial();
              }

              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_Filters_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_Filters_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.photos.library.v1.proto.Filters.class,
            com.google.photos.library.v1.proto.Filters.Builder.class);
  }

  public static final int DATE_FILTER_FIELD_NUMBER = 1;
  private com.google.photos.library.v1.proto.DateFilter dateFilter_;
  /**
   *
   *
   * <pre>
   * Filters the media items based on their creation date.
   * </pre>
   *
   * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
   *
   * @return Whether the dateFilter field is set.
   */
  @java.lang.Override
  public boolean hasDateFilter() {
    return dateFilter_ != null;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on their creation date.
   * </pre>
   *
   * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
   *
   * @return The dateFilter.
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.DateFilter getDateFilter() {
    return dateFilter_ == null
        ? com.google.photos.library.v1.proto.DateFilter.getDefaultInstance()
        : dateFilter_;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on their creation date.
   * </pre>
   *
   * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.DateFilterOrBuilder getDateFilterOrBuilder() {
    return getDateFilter();
  }

  public static final int CONTENT_FILTER_FIELD_NUMBER = 2;
  private com.google.photos.library.v1.proto.ContentFilter contentFilter_;
  /**
   *
   *
   * <pre>
   * Filters the media items based on their content.
   * </pre>
   *
   * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
   *
   * @return Whether the contentFilter field is set.
   */
  @java.lang.Override
  public boolean hasContentFilter() {
    return contentFilter_ != null;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on their content.
   * </pre>
   *
   * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
   *
   * @return The contentFilter.
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.ContentFilter getContentFilter() {
    return contentFilter_ == null
        ? com.google.photos.library.v1.proto.ContentFilter.getDefaultInstance()
        : contentFilter_;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on their content.
   * </pre>
   *
   * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.ContentFilterOrBuilder getContentFilterOrBuilder() {
    return getContentFilter();
  }

  public static final int MEDIA_TYPE_FILTER_FIELD_NUMBER = 3;
  private com.google.photos.library.v1.proto.MediaTypeFilter mediaTypeFilter_;
  /**
   *
   *
   * <pre>
   * Filters the media items based on the type of media.
   * </pre>
   *
   * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
   *
   * @return Whether the mediaTypeFilter field is set.
   */
  @java.lang.Override
  public boolean hasMediaTypeFilter() {
    return mediaTypeFilter_ != null;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on the type of media.
   * </pre>
   *
   * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
   *
   * @return The mediaTypeFilter.
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.MediaTypeFilter getMediaTypeFilter() {
    return mediaTypeFilter_ == null
        ? com.google.photos.library.v1.proto.MediaTypeFilter.getDefaultInstance()
        : mediaTypeFilter_;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on the type of media.
   * </pre>
   *
   * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.MediaTypeFilterOrBuilder getMediaTypeFilterOrBuilder() {
    return getMediaTypeFilter();
  }

  public static final int FEATURE_FILTER_FIELD_NUMBER = 7;
  private com.google.photos.library.v1.proto.FeatureFilter featureFilter_;
  /**
   *
   *
   * <pre>
   * Filters the media items based on their features.
   * </pre>
   *
   * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
   *
   * @return Whether the featureFilter field is set.
   */
  @java.lang.Override
  public boolean hasFeatureFilter() {
    return featureFilter_ != null;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on their features.
   * </pre>
   *
   * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
   *
   * @return The featureFilter.
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.FeatureFilter getFeatureFilter() {
    return featureFilter_ == null
        ? com.google.photos.library.v1.proto.FeatureFilter.getDefaultInstance()
        : featureFilter_;
  }
  /**
   *
   *
   * <pre>
   * Filters the media items based on their features.
   * </pre>
   *
   * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
   */
  @java.lang.Override
  public com.google.photos.library.v1.proto.FeatureFilterOrBuilder getFeatureFilterOrBuilder() {
    return getFeatureFilter();
  }

  public static final int INCLUDE_ARCHIVED_MEDIA_FIELD_NUMBER = 4;
  private boolean includeArchivedMedia_;
  /**
   *
   *
   * <pre>
   * If set, the results include media items that the user has archived.
   * Defaults to false (archived media items aren't included).
   * </pre>
   *
   * <code>bool include_archived_media = 4;</code>
   *
   * @return The includeArchivedMedia.
   */
  @java.lang.Override
  public boolean getIncludeArchivedMedia() {
    return includeArchivedMedia_;
  }

  public static final int EXCLUDE_NON_APP_CREATED_DATA_FIELD_NUMBER = 5;
  private boolean excludeNonAppCreatedData_;
  /**
   *
   *
   * <pre>
   * If set, the results exclude media items that were not created by this app.
   * Defaults to false (all media items are returned). This field is ignored if
   * the photoslibrary.readonly.appcreateddata scope is used.
   * </pre>
   *
   * <code>bool exclude_non_app_created_data = 5;</code>
   *
   * @return The excludeNonAppCreatedData.
   */
  @java.lang.Override
  public boolean getExcludeNonAppCreatedData() {
    return excludeNonAppCreatedData_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (dateFilter_ != null) {
      output.writeMessage(1, getDateFilter());
    }
    if (contentFilter_ != null) {
      output.writeMessage(2, getContentFilter());
    }
    if (mediaTypeFilter_ != null) {
      output.writeMessage(3, getMediaTypeFilter());
    }
    if (includeArchivedMedia_ != false) {
      output.writeBool(4, includeArchivedMedia_);
    }
    if (excludeNonAppCreatedData_ != false) {
      output.writeBool(5, excludeNonAppCreatedData_);
    }
    if (featureFilter_ != null) {
      output.writeMessage(7, getFeatureFilter());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (dateFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getDateFilter());
    }
    if (contentFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getContentFilter());
    }
    if (mediaTypeFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getMediaTypeFilter());
    }
    if (includeArchivedMedia_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, includeArchivedMedia_);
    }
    if (excludeNonAppCreatedData_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, excludeNonAppCreatedData_);
    }
    if (featureFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, getFeatureFilter());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.photos.library.v1.proto.Filters)) {
      return super.equals(obj);
    }
    com.google.photos.library.v1.proto.Filters other =
        (com.google.photos.library.v1.proto.Filters) obj;

    if (hasDateFilter() != other.hasDateFilter()) return false;
    if (hasDateFilter()) {
      if (!getDateFilter().equals(other.getDateFilter())) return false;
    }
    if (hasContentFilter() != other.hasContentFilter()) return false;
    if (hasContentFilter()) {
      if (!getContentFilter().equals(other.getContentFilter())) return false;
    }
    if (hasMediaTypeFilter() != other.hasMediaTypeFilter()) return false;
    if (hasMediaTypeFilter()) {
      if (!getMediaTypeFilter().equals(other.getMediaTypeFilter())) return false;
    }
    if (hasFeatureFilter() != other.hasFeatureFilter()) return false;
    if (hasFeatureFilter()) {
      if (!getFeatureFilter().equals(other.getFeatureFilter())) return false;
    }
    if (getIncludeArchivedMedia() != other.getIncludeArchivedMedia()) return false;
    if (getExcludeNonAppCreatedData() != other.getExcludeNonAppCreatedData()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDateFilter()) {
      hash = (37 * hash) + DATE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getDateFilter().hashCode();
    }
    if (hasContentFilter()) {
      hash = (37 * hash) + CONTENT_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getContentFilter().hashCode();
    }
    if (hasMediaTypeFilter()) {
      hash = (37 * hash) + MEDIA_TYPE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getMediaTypeFilter().hashCode();
    }
    if (hasFeatureFilter()) {
      hash = (37 * hash) + FEATURE_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureFilter().hashCode();
    }
    hash = (37 * hash) + INCLUDE_ARCHIVED_MEDIA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIncludeArchivedMedia());
    hash = (37 * hash) + EXCLUDE_NON_APP_CREATED_DATA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getExcludeNonAppCreatedData());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.Filters parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.Filters parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.Filters parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.photos.library.v1.proto.Filters prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Filters that can be applied to a media item search.
   * If multiple filter options are specified, they're treated as AND with each
   * other.
   * </pre>
   *
   * Protobuf type {@code google.photos.library.v1.Filters}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.photos.library.v1.Filters)
      com.google.photos.library.v1.proto.FiltersOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_Filters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_Filters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.photos.library.v1.proto.Filters.class,
              com.google.photos.library.v1.proto.Filters.Builder.class);
    }

    // Construct using com.google.photos.library.v1.proto.Filters.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dateFilterBuilder_ == null) {
        dateFilter_ = null;
      } else {
        dateFilter_ = null;
        dateFilterBuilder_ = null;
      }
      if (contentFilterBuilder_ == null) {
        contentFilter_ = null;
      } else {
        contentFilter_ = null;
        contentFilterBuilder_ = null;
      }
      if (mediaTypeFilterBuilder_ == null) {
        mediaTypeFilter_ = null;
      } else {
        mediaTypeFilter_ = null;
        mediaTypeFilterBuilder_ = null;
      }
      if (featureFilterBuilder_ == null) {
        featureFilter_ = null;
      } else {
        featureFilter_ = null;
        featureFilterBuilder_ = null;
      }
      includeArchivedMedia_ = false;

      excludeNonAppCreatedData_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_Filters_descriptor;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.Filters getDefaultInstanceForType() {
      return com.google.photos.library.v1.proto.Filters.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.Filters build() {
      com.google.photos.library.v1.proto.Filters result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.Filters buildPartial() {
      com.google.photos.library.v1.proto.Filters result =
          new com.google.photos.library.v1.proto.Filters(this);
      if (dateFilterBuilder_ == null) {
        result.dateFilter_ = dateFilter_;
      } else {
        result.dateFilter_ = dateFilterBuilder_.build();
      }
      if (contentFilterBuilder_ == null) {
        result.contentFilter_ = contentFilter_;
      } else {
        result.contentFilter_ = contentFilterBuilder_.build();
      }
      if (mediaTypeFilterBuilder_ == null) {
        result.mediaTypeFilter_ = mediaTypeFilter_;
      } else {
        result.mediaTypeFilter_ = mediaTypeFilterBuilder_.build();
      }
      if (featureFilterBuilder_ == null) {
        result.featureFilter_ = featureFilter_;
      } else {
        result.featureFilter_ = featureFilterBuilder_.build();
      }
      result.includeArchivedMedia_ = includeArchivedMedia_;
      result.excludeNonAppCreatedData_ = excludeNonAppCreatedData_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.photos.library.v1.proto.Filters) {
        return mergeFrom((com.google.photos.library.v1.proto.Filters) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.photos.library.v1.proto.Filters other) {
      if (other == com.google.photos.library.v1.proto.Filters.getDefaultInstance()) return this;
      if (other.hasDateFilter()) {
        mergeDateFilter(other.getDateFilter());
      }
      if (other.hasContentFilter()) {
        mergeContentFilter(other.getContentFilter());
      }
      if (other.hasMediaTypeFilter()) {
        mergeMediaTypeFilter(other.getMediaTypeFilter());
      }
      if (other.hasFeatureFilter()) {
        mergeFeatureFilter(other.getFeatureFilter());
      }
      if (other.getIncludeArchivedMedia() != false) {
        setIncludeArchivedMedia(other.getIncludeArchivedMedia());
      }
      if (other.getExcludeNonAppCreatedData() != false) {
        setExcludeNonAppCreatedData(other.getExcludeNonAppCreatedData());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.photos.library.v1.proto.Filters parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.photos.library.v1.proto.Filters) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.photos.library.v1.proto.DateFilter dateFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.DateFilter,
            com.google.photos.library.v1.proto.DateFilter.Builder,
            com.google.photos.library.v1.proto.DateFilterOrBuilder>
        dateFilterBuilder_;
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     *
     * @return Whether the dateFilter field is set.
     */
    public boolean hasDateFilter() {
      return dateFilterBuilder_ != null || dateFilter_ != null;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     *
     * @return The dateFilter.
     */
    public com.google.photos.library.v1.proto.DateFilter getDateFilter() {
      if (dateFilterBuilder_ == null) {
        return dateFilter_ == null
            ? com.google.photos.library.v1.proto.DateFilter.getDefaultInstance()
            : dateFilter_;
      } else {
        return dateFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    public Builder setDateFilter(com.google.photos.library.v1.proto.DateFilter value) {
      if (dateFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateFilter_ = value;
        onChanged();
      } else {
        dateFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    public Builder setDateFilter(
        com.google.photos.library.v1.proto.DateFilter.Builder builderForValue) {
      if (dateFilterBuilder_ == null) {
        dateFilter_ = builderForValue.build();
        onChanged();
      } else {
        dateFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    public Builder mergeDateFilter(com.google.photos.library.v1.proto.DateFilter value) {
      if (dateFilterBuilder_ == null) {
        if (dateFilter_ != null) {
          dateFilter_ =
              com.google.photos.library.v1.proto.DateFilter.newBuilder(dateFilter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          dateFilter_ = value;
        }
        onChanged();
      } else {
        dateFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    public Builder clearDateFilter() {
      if (dateFilterBuilder_ == null) {
        dateFilter_ = null;
        onChanged();
      } else {
        dateFilter_ = null;
        dateFilterBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    public com.google.photos.library.v1.proto.DateFilter.Builder getDateFilterBuilder() {

      onChanged();
      return getDateFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    public com.google.photos.library.v1.proto.DateFilterOrBuilder getDateFilterOrBuilder() {
      if (dateFilterBuilder_ != null) {
        return dateFilterBuilder_.getMessageOrBuilder();
      } else {
        return dateFilter_ == null
            ? com.google.photos.library.v1.proto.DateFilter.getDefaultInstance()
            : dateFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their creation date.
     * </pre>
     *
     * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.DateFilter,
            com.google.photos.library.v1.proto.DateFilter.Builder,
            com.google.photos.library.v1.proto.DateFilterOrBuilder>
        getDateFilterFieldBuilder() {
      if (dateFilterBuilder_ == null) {
        dateFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.library.v1.proto.DateFilter,
                com.google.photos.library.v1.proto.DateFilter.Builder,
                com.google.photos.library.v1.proto.DateFilterOrBuilder>(
                getDateFilter(), getParentForChildren(), isClean());
        dateFilter_ = null;
      }
      return dateFilterBuilder_;
    }

    private com.google.photos.library.v1.proto.ContentFilter contentFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.ContentFilter,
            com.google.photos.library.v1.proto.ContentFilter.Builder,
            com.google.photos.library.v1.proto.ContentFilterOrBuilder>
        contentFilterBuilder_;
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     *
     * @return Whether the contentFilter field is set.
     */
    public boolean hasContentFilter() {
      return contentFilterBuilder_ != null || contentFilter_ != null;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     *
     * @return The contentFilter.
     */
    public com.google.photos.library.v1.proto.ContentFilter getContentFilter() {
      if (contentFilterBuilder_ == null) {
        return contentFilter_ == null
            ? com.google.photos.library.v1.proto.ContentFilter.getDefaultInstance()
            : contentFilter_;
      } else {
        return contentFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    public Builder setContentFilter(com.google.photos.library.v1.proto.ContentFilter value) {
      if (contentFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contentFilter_ = value;
        onChanged();
      } else {
        contentFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    public Builder setContentFilter(
        com.google.photos.library.v1.proto.ContentFilter.Builder builderForValue) {
      if (contentFilterBuilder_ == null) {
        contentFilter_ = builderForValue.build();
        onChanged();
      } else {
        contentFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    public Builder mergeContentFilter(com.google.photos.library.v1.proto.ContentFilter value) {
      if (contentFilterBuilder_ == null) {
        if (contentFilter_ != null) {
          contentFilter_ =
              com.google.photos.library.v1.proto.ContentFilter.newBuilder(contentFilter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          contentFilter_ = value;
        }
        onChanged();
      } else {
        contentFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    public Builder clearContentFilter() {
      if (contentFilterBuilder_ == null) {
        contentFilter_ = null;
        onChanged();
      } else {
        contentFilter_ = null;
        contentFilterBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    public com.google.photos.library.v1.proto.ContentFilter.Builder getContentFilterBuilder() {

      onChanged();
      return getContentFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    public com.google.photos.library.v1.proto.ContentFilterOrBuilder getContentFilterOrBuilder() {
      if (contentFilterBuilder_ != null) {
        return contentFilterBuilder_.getMessageOrBuilder();
      } else {
        return contentFilter_ == null
            ? com.google.photos.library.v1.proto.ContentFilter.getDefaultInstance()
            : contentFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their content.
     * </pre>
     *
     * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.ContentFilter,
            com.google.photos.library.v1.proto.ContentFilter.Builder,
            com.google.photos.library.v1.proto.ContentFilterOrBuilder>
        getContentFilterFieldBuilder() {
      if (contentFilterBuilder_ == null) {
        contentFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.library.v1.proto.ContentFilter,
                com.google.photos.library.v1.proto.ContentFilter.Builder,
                com.google.photos.library.v1.proto.ContentFilterOrBuilder>(
                getContentFilter(), getParentForChildren(), isClean());
        contentFilter_ = null;
      }
      return contentFilterBuilder_;
    }

    private com.google.photos.library.v1.proto.MediaTypeFilter mediaTypeFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.MediaTypeFilter,
            com.google.photos.library.v1.proto.MediaTypeFilter.Builder,
            com.google.photos.library.v1.proto.MediaTypeFilterOrBuilder>
        mediaTypeFilterBuilder_;
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     *
     * @return Whether the mediaTypeFilter field is set.
     */
    public boolean hasMediaTypeFilter() {
      return mediaTypeFilterBuilder_ != null || mediaTypeFilter_ != null;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     *
     * @return The mediaTypeFilter.
     */
    public com.google.photos.library.v1.proto.MediaTypeFilter getMediaTypeFilter() {
      if (mediaTypeFilterBuilder_ == null) {
        return mediaTypeFilter_ == null
            ? com.google.photos.library.v1.proto.MediaTypeFilter.getDefaultInstance()
            : mediaTypeFilter_;
      } else {
        return mediaTypeFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    public Builder setMediaTypeFilter(com.google.photos.library.v1.proto.MediaTypeFilter value) {
      if (mediaTypeFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mediaTypeFilter_ = value;
        onChanged();
      } else {
        mediaTypeFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    public Builder setMediaTypeFilter(
        com.google.photos.library.v1.proto.MediaTypeFilter.Builder builderForValue) {
      if (mediaTypeFilterBuilder_ == null) {
        mediaTypeFilter_ = builderForValue.build();
        onChanged();
      } else {
        mediaTypeFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    public Builder mergeMediaTypeFilter(com.google.photos.library.v1.proto.MediaTypeFilter value) {
      if (mediaTypeFilterBuilder_ == null) {
        if (mediaTypeFilter_ != null) {
          mediaTypeFilter_ =
              com.google.photos.library.v1.proto.MediaTypeFilter.newBuilder(mediaTypeFilter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          mediaTypeFilter_ = value;
        }
        onChanged();
      } else {
        mediaTypeFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    public Builder clearMediaTypeFilter() {
      if (mediaTypeFilterBuilder_ == null) {
        mediaTypeFilter_ = null;
        onChanged();
      } else {
        mediaTypeFilter_ = null;
        mediaTypeFilterBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    public com.google.photos.library.v1.proto.MediaTypeFilter.Builder getMediaTypeFilterBuilder() {

      onChanged();
      return getMediaTypeFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    public com.google.photos.library.v1.proto.MediaTypeFilterOrBuilder
        getMediaTypeFilterOrBuilder() {
      if (mediaTypeFilterBuilder_ != null) {
        return mediaTypeFilterBuilder_.getMessageOrBuilder();
      } else {
        return mediaTypeFilter_ == null
            ? com.google.photos.library.v1.proto.MediaTypeFilter.getDefaultInstance()
            : mediaTypeFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on the type of media.
     * </pre>
     *
     * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.MediaTypeFilter,
            com.google.photos.library.v1.proto.MediaTypeFilter.Builder,
            com.google.photos.library.v1.proto.MediaTypeFilterOrBuilder>
        getMediaTypeFilterFieldBuilder() {
      if (mediaTypeFilterBuilder_ == null) {
        mediaTypeFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.library.v1.proto.MediaTypeFilter,
                com.google.photos.library.v1.proto.MediaTypeFilter.Builder,
                com.google.photos.library.v1.proto.MediaTypeFilterOrBuilder>(
                getMediaTypeFilter(), getParentForChildren(), isClean());
        mediaTypeFilter_ = null;
      }
      return mediaTypeFilterBuilder_;
    }

    private com.google.photos.library.v1.proto.FeatureFilter featureFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.FeatureFilter,
            com.google.photos.library.v1.proto.FeatureFilter.Builder,
            com.google.photos.library.v1.proto.FeatureFilterOrBuilder>
        featureFilterBuilder_;
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     *
     * @return Whether the featureFilter field is set.
     */
    public boolean hasFeatureFilter() {
      return featureFilterBuilder_ != null || featureFilter_ != null;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     *
     * @return The featureFilter.
     */
    public com.google.photos.library.v1.proto.FeatureFilter getFeatureFilter() {
      if (featureFilterBuilder_ == null) {
        return featureFilter_ == null
            ? com.google.photos.library.v1.proto.FeatureFilter.getDefaultInstance()
            : featureFilter_;
      } else {
        return featureFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    public Builder setFeatureFilter(com.google.photos.library.v1.proto.FeatureFilter value) {
      if (featureFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        featureFilter_ = value;
        onChanged();
      } else {
        featureFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    public Builder setFeatureFilter(
        com.google.photos.library.v1.proto.FeatureFilter.Builder builderForValue) {
      if (featureFilterBuilder_ == null) {
        featureFilter_ = builderForValue.build();
        onChanged();
      } else {
        featureFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    public Builder mergeFeatureFilter(com.google.photos.library.v1.proto.FeatureFilter value) {
      if (featureFilterBuilder_ == null) {
        if (featureFilter_ != null) {
          featureFilter_ =
              com.google.photos.library.v1.proto.FeatureFilter.newBuilder(featureFilter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          featureFilter_ = value;
        }
        onChanged();
      } else {
        featureFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    public Builder clearFeatureFilter() {
      if (featureFilterBuilder_ == null) {
        featureFilter_ = null;
        onChanged();
      } else {
        featureFilter_ = null;
        featureFilterBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    public com.google.photos.library.v1.proto.FeatureFilter.Builder getFeatureFilterBuilder() {

      onChanged();
      return getFeatureFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    public com.google.photos.library.v1.proto.FeatureFilterOrBuilder getFeatureFilterOrBuilder() {
      if (featureFilterBuilder_ != null) {
        return featureFilterBuilder_.getMessageOrBuilder();
      } else {
        return featureFilter_ == null
            ? com.google.photos.library.v1.proto.FeatureFilter.getDefaultInstance()
            : featureFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * Filters the media items based on their features.
     * </pre>
     *
     * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.library.v1.proto.FeatureFilter,
            com.google.photos.library.v1.proto.FeatureFilter.Builder,
            com.google.photos.library.v1.proto.FeatureFilterOrBuilder>
        getFeatureFilterFieldBuilder() {
      if (featureFilterBuilder_ == null) {
        featureFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.library.v1.proto.FeatureFilter,
                com.google.photos.library.v1.proto.FeatureFilter.Builder,
                com.google.photos.library.v1.proto.FeatureFilterOrBuilder>(
                getFeatureFilter(), getParentForChildren(), isClean());
        featureFilter_ = null;
      }
      return featureFilterBuilder_;
    }

    private boolean includeArchivedMedia_;
    /**
     *
     *
     * <pre>
     * If set, the results include media items that the user has archived.
     * Defaults to false (archived media items aren't included).
     * </pre>
     *
     * <code>bool include_archived_media = 4;</code>
     *
     * @return The includeArchivedMedia.
     */
    @java.lang.Override
    public boolean getIncludeArchivedMedia() {
      return includeArchivedMedia_;
    }
    /**
     *
     *
     * <pre>
     * If set, the results include media items that the user has archived.
     * Defaults to false (archived media items aren't included).
     * </pre>
     *
     * <code>bool include_archived_media = 4;</code>
     *
     * @param value The includeArchivedMedia to set.
     * @return This builder for chaining.
     */
    public Builder setIncludeArchivedMedia(boolean value) {

      includeArchivedMedia_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If set, the results include media items that the user has archived.
     * Defaults to false (archived media items aren't included).
     * </pre>
     *
     * <code>bool include_archived_media = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIncludeArchivedMedia() {

      includeArchivedMedia_ = false;
      onChanged();
      return this;
    }

    private boolean excludeNonAppCreatedData_;
    /**
     *
     *
     * <pre>
     * If set, the results exclude media items that were not created by this app.
     * Defaults to false (all media items are returned). This field is ignored if
     * the photoslibrary.readonly.appcreateddata scope is used.
     * </pre>
     *
     * <code>bool exclude_non_app_created_data = 5;</code>
     *
     * @return The excludeNonAppCreatedData.
     */
    @java.lang.Override
    public boolean getExcludeNonAppCreatedData() {
      return excludeNonAppCreatedData_;
    }
    /**
     *
     *
     * <pre>
     * If set, the results exclude media items that were not created by this app.
     * Defaults to false (all media items are returned). This field is ignored if
     * the photoslibrary.readonly.appcreateddata scope is used.
     * </pre>
     *
     * <code>bool exclude_non_app_created_data = 5;</code>
     *
     * @param value The excludeNonAppCreatedData to set.
     * @return This builder for chaining.
     */
    public Builder setExcludeNonAppCreatedData(boolean value) {

      excludeNonAppCreatedData_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If set, the results exclude media items that were not created by this app.
     * Defaults to false (all media items are returned). This field is ignored if
     * the photoslibrary.readonly.appcreateddata scope is used.
     * </pre>
     *
     * <code>bool exclude_non_app_created_data = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearExcludeNonAppCreatedData() {

      excludeNonAppCreatedData_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.photos.library.v1.Filters)
  }

  // @@protoc_insertion_point(class_scope:google.photos.library.v1.Filters)
  private static final com.google.photos.library.v1.proto.Filters DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.photos.library.v1.proto.Filters();
  }

  public static com.google.photos.library.v1.proto.Filters getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Filters> PARSER =
      new com.google.protobuf.AbstractParser<Filters>() {
        @java.lang.Override
        public Filters parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Filters(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<Filters> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Filters> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.photos.library.v1.proto.Filters getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}

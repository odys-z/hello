// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

public interface UpdateAlbumRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.photos.library.v1.UpdateAlbumRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The [Album][google.photos.types.Album] to update.
   * The album’s `id` field is used to identify the album to be updated.
   * The album’s `title` field is used to set the new album title.
   * The album’s `cover_photo_media_item_id` field is used to set the new album
   * cover photo.
   * </pre>
   *
   * <code>.google.photos.types.Album album = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return Whether the album field is set.
   */
  boolean hasAlbum();
  /**
   *
   *
   * <pre>
   * Required. The [Album][google.photos.types.Album] to update.
   * The album’s `id` field is used to identify the album to be updated.
   * The album’s `title` field is used to set the new album title.
   * The album’s `cover_photo_media_item_id` field is used to set the new album
   * cover photo.
   * </pre>
   *
   * <code>.google.photos.types.Album album = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The album.
   */
  com.google.photos.types.proto.Album getAlbum();
  /**
   *
   *
   * <pre>
   * Required. The [Album][google.photos.types.Album] to update.
   * The album’s `id` field is used to identify the album to be updated.
   * The album’s `title` field is used to set the new album title.
   * The album’s `cover_photo_media_item_id` field is used to set the new album
   * cover photo.
   * </pre>
   *
   * <code>.google.photos.types.Album album = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.photos.types.proto.AlbumOrBuilder getAlbumOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Indicate what fields in the provided album to update.
   * The only valid values are `title` and `cover_photo_media_item_id`.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the updateMask field is set.
   */
  boolean hasUpdateMask();
  /**
   *
   *
   * <pre>
   * Required. Indicate what fields in the provided album to update.
   * The only valid values are `title` and `cover_photo_media_item_id`.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The updateMask.
   */
  com.google.protobuf.FieldMask getUpdateMask();
  /**
   *
   *
   * <pre>
   * Required. Indicate what fields in the provided album to update.
   * The only valid values are `title` and `cover_photo_media_item_id`.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/types/media_item.proto

package com.google.photos.types.proto;

/**
 *
 *
 * <pre>
 * Metadata that is specific to a photo, such as, ISO, focal length and
 * exposure time. Some of these fields may be null or not included.
 * </pre>
 *
 * Protobuf type {@code google.photos.types.Photo}
 */
public final class Photo extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.photos.types.Photo)
    PhotoOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Photo.newBuilder() to construct.
  private Photo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Photo() {
    cameraMake_ = "";
    cameraModel_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Photo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private Photo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              cameraMake_ = s;
              break;
            }
          case 18:
            {
              java.lang.String s = input.readStringRequireUtf8();

              cameraModel_ = s;
              break;
            }
          case 29:
            {
              focalLength_ = input.readFloat();
              break;
            }
          case 37:
            {
              apertureFNumber_ = input.readFloat();
              break;
            }
          case 40:
            {
              isoEquivalent_ = input.readInt32();
              break;
            }
          case 50:
            {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (exposureTime_ != null) {
                subBuilder = exposureTime_.toBuilder();
              }
              exposureTime_ =
                  input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exposureTime_);
                exposureTime_ = subBuilder.buildPartial();
              }

              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.photos.types.proto.MediaItemProto
        .internal_static_google_photos_types_Photo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.photos.types.proto.MediaItemProto
        .internal_static_google_photos_types_Photo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.photos.types.proto.Photo.class,
            com.google.photos.types.proto.Photo.Builder.class);
  }

  public static final int CAMERA_MAKE_FIELD_NUMBER = 1;
  private volatile java.lang.Object cameraMake_;
  /**
   *
   *
   * <pre>
   * Brand of the camera with which the photo was taken.
   * </pre>
   *
   * <code>string camera_make = 1;</code>
   *
   * @return The cameraMake.
   */
  @java.lang.Override
  public java.lang.String getCameraMake() {
    java.lang.Object ref = cameraMake_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cameraMake_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Brand of the camera with which the photo was taken.
   * </pre>
   *
   * <code>string camera_make = 1;</code>
   *
   * @return The bytes for cameraMake.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCameraMakeBytes() {
    java.lang.Object ref = cameraMake_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      cameraMake_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CAMERA_MODEL_FIELD_NUMBER = 2;
  private volatile java.lang.Object cameraModel_;
  /**
   *
   *
   * <pre>
   * Model of the camera with which the photo was taken.
   * </pre>
   *
   * <code>string camera_model = 2;</code>
   *
   * @return The cameraModel.
   */
  @java.lang.Override
  public java.lang.String getCameraModel() {
    java.lang.Object ref = cameraModel_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cameraModel_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Model of the camera with which the photo was taken.
   * </pre>
   *
   * <code>string camera_model = 2;</code>
   *
   * @return The bytes for cameraModel.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCameraModelBytes() {
    java.lang.Object ref = cameraModel_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      cameraModel_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FOCAL_LENGTH_FIELD_NUMBER = 3;
  private float focalLength_;
  /**
   *
   *
   * <pre>
   * Focal length of the camera lens with which the photo was taken.
   * </pre>
   *
   * <code>float focal_length = 3;</code>
   *
   * @return The focalLength.
   */
  @java.lang.Override
  public float getFocalLength() {
    return focalLength_;
  }

  public static final int APERTURE_F_NUMBER_FIELD_NUMBER = 4;
  private float apertureFNumber_;
  /**
   *
   *
   * <pre>
   * Aperture f number of the camera lens with which the photo was taken.
   * </pre>
   *
   * <code>float aperture_f_number = 4;</code>
   *
   * @return The apertureFNumber.
   */
  @java.lang.Override
  public float getApertureFNumber() {
    return apertureFNumber_;
  }

  public static final int ISO_EQUIVALENT_FIELD_NUMBER = 5;
  private int isoEquivalent_;
  /**
   *
   *
   * <pre>
   * ISO of the camera with which the photo was taken.
   * </pre>
   *
   * <code>int32 iso_equivalent = 5;</code>
   *
   * @return The isoEquivalent.
   */
  @java.lang.Override
  public int getIsoEquivalent() {
    return isoEquivalent_;
  }

  public static final int EXPOSURE_TIME_FIELD_NUMBER = 6;
  private com.google.protobuf.Duration exposureTime_;
  /**
   *
   *
   * <pre>
   * Exposure time of the camera aperture when the photo was taken.
   * </pre>
   *
   * <code>.google.protobuf.Duration exposure_time = 6;</code>
   *
   * @return Whether the exposureTime field is set.
   */
  @java.lang.Override
  public boolean hasExposureTime() {
    return exposureTime_ != null;
  }
  /**
   *
   *
   * <pre>
   * Exposure time of the camera aperture when the photo was taken.
   * </pre>
   *
   * <code>.google.protobuf.Duration exposure_time = 6;</code>
   *
   * @return The exposureTime.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getExposureTime() {
    return exposureTime_ == null
        ? com.google.protobuf.Duration.getDefaultInstance()
        : exposureTime_;
  }
  /**
   *
   *
   * <pre>
   * Exposure time of the camera aperture when the photo was taken.
   * </pre>
   *
   * <code>.google.protobuf.Duration exposure_time = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getExposureTimeOrBuilder() {
    return getExposureTime();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getCameraMakeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cameraMake_);
    }
    if (!getCameraModelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cameraModel_);
    }
    if (focalLength_ != 0F) {
      output.writeFloat(3, focalLength_);
    }
    if (apertureFNumber_ != 0F) {
      output.writeFloat(4, apertureFNumber_);
    }
    if (isoEquivalent_ != 0) {
      output.writeInt32(5, isoEquivalent_);
    }
    if (exposureTime_ != null) {
      output.writeMessage(6, getExposureTime());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCameraMakeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cameraMake_);
    }
    if (!getCameraModelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cameraModel_);
    }
    if (focalLength_ != 0F) {
      size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, focalLength_);
    }
    if (apertureFNumber_ != 0F) {
      size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, apertureFNumber_);
    }
    if (isoEquivalent_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(5, isoEquivalent_);
    }
    if (exposureTime_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getExposureTime());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.photos.types.proto.Photo)) {
      return super.equals(obj);
    }
    com.google.photos.types.proto.Photo other = (com.google.photos.types.proto.Photo) obj;

    if (!getCameraMake().equals(other.getCameraMake())) return false;
    if (!getCameraModel().equals(other.getCameraModel())) return false;
    if (java.lang.Float.floatToIntBits(getFocalLength())
        != java.lang.Float.floatToIntBits(other.getFocalLength())) return false;
    if (java.lang.Float.floatToIntBits(getApertureFNumber())
        != java.lang.Float.floatToIntBits(other.getApertureFNumber())) return false;
    if (getIsoEquivalent() != other.getIsoEquivalent()) return false;
    if (hasExposureTime() != other.hasExposureTime()) return false;
    if (hasExposureTime()) {
      if (!getExposureTime().equals(other.getExposureTime())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CAMERA_MAKE_FIELD_NUMBER;
    hash = (53 * hash) + getCameraMake().hashCode();
    hash = (37 * hash) + CAMERA_MODEL_FIELD_NUMBER;
    hash = (53 * hash) + getCameraModel().hashCode();
    hash = (37 * hash) + FOCAL_LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(getFocalLength());
    hash = (37 * hash) + APERTURE_F_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(getApertureFNumber());
    hash = (37 * hash) + ISO_EQUIVALENT_FIELD_NUMBER;
    hash = (53 * hash) + getIsoEquivalent();
    if (hasExposureTime()) {
      hash = (37 * hash) + EXPOSURE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getExposureTime().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.photos.types.proto.Photo parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.types.proto.Photo parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.types.proto.Photo parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.types.proto.Photo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.types.proto.Photo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.types.proto.Photo parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.types.proto.Photo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.types.proto.Photo parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.types.proto.Photo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.photos.types.proto.Photo parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.types.proto.Photo parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.types.proto.Photo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.photos.types.proto.Photo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Metadata that is specific to a photo, such as, ISO, focal length and
   * exposure time. Some of these fields may be null or not included.
   * </pre>
   *
   * Protobuf type {@code google.photos.types.Photo}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.photos.types.Photo)
      com.google.photos.types.proto.PhotoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.photos.types.proto.MediaItemProto
          .internal_static_google_photos_types_Photo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.photos.types.proto.MediaItemProto
          .internal_static_google_photos_types_Photo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.photos.types.proto.Photo.class,
              com.google.photos.types.proto.Photo.Builder.class);
    }

    // Construct using com.google.photos.types.proto.Photo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      cameraMake_ = "";

      cameraModel_ = "";

      focalLength_ = 0F;

      apertureFNumber_ = 0F;

      isoEquivalent_ = 0;

      if (exposureTimeBuilder_ == null) {
        exposureTime_ = null;
      } else {
        exposureTime_ = null;
        exposureTimeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.photos.types.proto.MediaItemProto
          .internal_static_google_photos_types_Photo_descriptor;
    }

    @java.lang.Override
    public com.google.photos.types.proto.Photo getDefaultInstanceForType() {
      return com.google.photos.types.proto.Photo.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.photos.types.proto.Photo build() {
      com.google.photos.types.proto.Photo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.photos.types.proto.Photo buildPartial() {
      com.google.photos.types.proto.Photo result = new com.google.photos.types.proto.Photo(this);
      result.cameraMake_ = cameraMake_;
      result.cameraModel_ = cameraModel_;
      result.focalLength_ = focalLength_;
      result.apertureFNumber_ = apertureFNumber_;
      result.isoEquivalent_ = isoEquivalent_;
      if (exposureTimeBuilder_ == null) {
        result.exposureTime_ = exposureTime_;
      } else {
        result.exposureTime_ = exposureTimeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.photos.types.proto.Photo) {
        return mergeFrom((com.google.photos.types.proto.Photo) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.photos.types.proto.Photo other) {
      if (other == com.google.photos.types.proto.Photo.getDefaultInstance()) return this;
      if (!other.getCameraMake().isEmpty()) {
        cameraMake_ = other.cameraMake_;
        onChanged();
      }
      if (!other.getCameraModel().isEmpty()) {
        cameraModel_ = other.cameraModel_;
        onChanged();
      }
      if (other.getFocalLength() != 0F) {
        setFocalLength(other.getFocalLength());
      }
      if (other.getApertureFNumber() != 0F) {
        setApertureFNumber(other.getApertureFNumber());
      }
      if (other.getIsoEquivalent() != 0) {
        setIsoEquivalent(other.getIsoEquivalent());
      }
      if (other.hasExposureTime()) {
        mergeExposureTime(other.getExposureTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.photos.types.proto.Photo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.photos.types.proto.Photo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object cameraMake_ = "";
    /**
     *
     *
     * <pre>
     * Brand of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_make = 1;</code>
     *
     * @return The cameraMake.
     */
    public java.lang.String getCameraMake() {
      java.lang.Object ref = cameraMake_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cameraMake_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Brand of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_make = 1;</code>
     *
     * @return The bytes for cameraMake.
     */
    public com.google.protobuf.ByteString getCameraMakeBytes() {
      java.lang.Object ref = cameraMake_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        cameraMake_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Brand of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_make = 1;</code>
     *
     * @param value The cameraMake to set.
     * @return This builder for chaining.
     */
    public Builder setCameraMake(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      cameraMake_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Brand of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_make = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCameraMake() {

      cameraMake_ = getDefaultInstance().getCameraMake();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Brand of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_make = 1;</code>
     *
     * @param value The bytes for cameraMake to set.
     * @return This builder for chaining.
     */
    public Builder setCameraMakeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      cameraMake_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object cameraModel_ = "";
    /**
     *
     *
     * <pre>
     * Model of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_model = 2;</code>
     *
     * @return The cameraModel.
     */
    public java.lang.String getCameraModel() {
      java.lang.Object ref = cameraModel_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cameraModel_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Model of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_model = 2;</code>
     *
     * @return The bytes for cameraModel.
     */
    public com.google.protobuf.ByteString getCameraModelBytes() {
      java.lang.Object ref = cameraModel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        cameraModel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Model of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_model = 2;</code>
     *
     * @param value The cameraModel to set.
     * @return This builder for chaining.
     */
    public Builder setCameraModel(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      cameraModel_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Model of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_model = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCameraModel() {

      cameraModel_ = getDefaultInstance().getCameraModel();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Model of the camera with which the photo was taken.
     * </pre>
     *
     * <code>string camera_model = 2;</code>
     *
     * @param value The bytes for cameraModel to set.
     * @return This builder for chaining.
     */
    public Builder setCameraModelBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      cameraModel_ = value;
      onChanged();
      return this;
    }

    private float focalLength_;
    /**
     *
     *
     * <pre>
     * Focal length of the camera lens with which the photo was taken.
     * </pre>
     *
     * <code>float focal_length = 3;</code>
     *
     * @return The focalLength.
     */
    @java.lang.Override
    public float getFocalLength() {
      return focalLength_;
    }
    /**
     *
     *
     * <pre>
     * Focal length of the camera lens with which the photo was taken.
     * </pre>
     *
     * <code>float focal_length = 3;</code>
     *
     * @param value The focalLength to set.
     * @return This builder for chaining.
     */
    public Builder setFocalLength(float value) {

      focalLength_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Focal length of the camera lens with which the photo was taken.
     * </pre>
     *
     * <code>float focal_length = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFocalLength() {

      focalLength_ = 0F;
      onChanged();
      return this;
    }

    private float apertureFNumber_;
    /**
     *
     *
     * <pre>
     * Aperture f number of the camera lens with which the photo was taken.
     * </pre>
     *
     * <code>float aperture_f_number = 4;</code>
     *
     * @return The apertureFNumber.
     */
    @java.lang.Override
    public float getApertureFNumber() {
      return apertureFNumber_;
    }
    /**
     *
     *
     * <pre>
     * Aperture f number of the camera lens with which the photo was taken.
     * </pre>
     *
     * <code>float aperture_f_number = 4;</code>
     *
     * @param value The apertureFNumber to set.
     * @return This builder for chaining.
     */
    public Builder setApertureFNumber(float value) {

      apertureFNumber_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Aperture f number of the camera lens with which the photo was taken.
     * </pre>
     *
     * <code>float aperture_f_number = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearApertureFNumber() {

      apertureFNumber_ = 0F;
      onChanged();
      return this;
    }

    private int isoEquivalent_;
    /**
     *
     *
     * <pre>
     * ISO of the camera with which the photo was taken.
     * </pre>
     *
     * <code>int32 iso_equivalent = 5;</code>
     *
     * @return The isoEquivalent.
     */
    @java.lang.Override
    public int getIsoEquivalent() {
      return isoEquivalent_;
    }
    /**
     *
     *
     * <pre>
     * ISO of the camera with which the photo was taken.
     * </pre>
     *
     * <code>int32 iso_equivalent = 5;</code>
     *
     * @param value The isoEquivalent to set.
     * @return This builder for chaining.
     */
    public Builder setIsoEquivalent(int value) {

      isoEquivalent_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * ISO of the camera with which the photo was taken.
     * </pre>
     *
     * <code>int32 iso_equivalent = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIsoEquivalent() {

      isoEquivalent_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration exposureTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        exposureTimeBuilder_;
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     *
     * @return Whether the exposureTime field is set.
     */
    public boolean hasExposureTime() {
      return exposureTimeBuilder_ != null || exposureTime_ != null;
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     *
     * @return The exposureTime.
     */
    public com.google.protobuf.Duration getExposureTime() {
      if (exposureTimeBuilder_ == null) {
        return exposureTime_ == null
            ? com.google.protobuf.Duration.getDefaultInstance()
            : exposureTime_;
      } else {
        return exposureTimeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    public Builder setExposureTime(com.google.protobuf.Duration value) {
      if (exposureTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exposureTime_ = value;
        onChanged();
      } else {
        exposureTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    public Builder setExposureTime(com.google.protobuf.Duration.Builder builderForValue) {
      if (exposureTimeBuilder_ == null) {
        exposureTime_ = builderForValue.build();
        onChanged();
      } else {
        exposureTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    public Builder mergeExposureTime(com.google.protobuf.Duration value) {
      if (exposureTimeBuilder_ == null) {
        if (exposureTime_ != null) {
          exposureTime_ =
              com.google.protobuf.Duration.newBuilder(exposureTime_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          exposureTime_ = value;
        }
        onChanged();
      } else {
        exposureTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    public Builder clearExposureTime() {
      if (exposureTimeBuilder_ == null) {
        exposureTime_ = null;
        onChanged();
      } else {
        exposureTime_ = null;
        exposureTimeBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    public com.google.protobuf.Duration.Builder getExposureTimeBuilder() {

      onChanged();
      return getExposureTimeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    public com.google.protobuf.DurationOrBuilder getExposureTimeOrBuilder() {
      if (exposureTimeBuilder_ != null) {
        return exposureTimeBuilder_.getMessageOrBuilder();
      } else {
        return exposureTime_ == null
            ? com.google.protobuf.Duration.getDefaultInstance()
            : exposureTime_;
      }
    }
    /**
     *
     *
     * <pre>
     * Exposure time of the camera aperture when the photo was taken.
     * </pre>
     *
     * <code>.google.protobuf.Duration exposure_time = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        getExposureTimeFieldBuilder() {
      if (exposureTimeBuilder_ == null) {
        exposureTimeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration,
                com.google.protobuf.Duration.Builder,
                com.google.protobuf.DurationOrBuilder>(
                getExposureTime(), getParentForChildren(), isClean());
        exposureTime_ = null;
      }
      return exposureTimeBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.photos.types.Photo)
  }

  // @@protoc_insertion_point(class_scope:google.photos.types.Photo)
  private static final com.google.photos.types.proto.Photo DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.photos.types.proto.Photo();
  }

  public static com.google.photos.types.proto.Photo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Photo> PARSER =
      new com.google.protobuf.AbstractParser<Photo>() {
        @java.lang.Override
        public Photo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Photo(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<Photo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Photo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.photos.types.proto.Photo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}

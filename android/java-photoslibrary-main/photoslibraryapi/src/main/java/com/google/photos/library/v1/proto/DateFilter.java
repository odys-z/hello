// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

/**
 *
 *
 * <pre>
 * This filter defines the allowed dates or date ranges for the media returned.
 * It's possible to pick a set of specific dates and a set of date ranges.
 * </pre>
 *
 * Protobuf type {@code google.photos.library.v1.DateFilter}
 */
public final class DateFilter extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.photos.library.v1.DateFilter)
    DateFilterOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use DateFilter.newBuilder() to construct.
  private DateFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private DateFilter() {
    dates_ = java.util.Collections.emptyList();
    ranges_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new DateFilter();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private DateFilter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dates_ = new java.util.ArrayList<com.google.type.Date>();
                mutable_bitField0_ |= 0x00000001;
              }
              dates_.add(input.readMessage(com.google.type.Date.parser(), extensionRegistry));
              break;
            }
          case 18:
            {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                ranges_ = new java.util.ArrayList<com.google.photos.types.proto.DateRange>();
                mutable_bitField0_ |= 0x00000002;
              }
              ranges_.add(
                  input.readMessage(
                      com.google.photos.types.proto.DateRange.parser(), extensionRegistry));
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        dates_ = java.util.Collections.unmodifiableList(dates_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        ranges_ = java.util.Collections.unmodifiableList(ranges_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_DateFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_DateFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.photos.library.v1.proto.DateFilter.class,
            com.google.photos.library.v1.proto.DateFilter.Builder.class);
  }

  public static final int DATES_FIELD_NUMBER = 1;
  private java.util.List<com.google.type.Date> dates_;
  /**
   *
   *
   * <pre>
   * List of dates that match the media items' creation date. A maximum of
   * 5 dates can be included per request.
   * </pre>
   *
   * <code>repeated .google.type.Date dates = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.type.Date> getDatesList() {
    return dates_;
  }
  /**
   *
   *
   * <pre>
   * List of dates that match the media items' creation date. A maximum of
   * 5 dates can be included per request.
   * </pre>
   *
   * <code>repeated .google.type.Date dates = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.type.DateOrBuilder> getDatesOrBuilderList() {
    return dates_;
  }
  /**
   *
   *
   * <pre>
   * List of dates that match the media items' creation date. A maximum of
   * 5 dates can be included per request.
   * </pre>
   *
   * <code>repeated .google.type.Date dates = 1;</code>
   */
  @java.lang.Override
  public int getDatesCount() {
    return dates_.size();
  }
  /**
   *
   *
   * <pre>
   * List of dates that match the media items' creation date. A maximum of
   * 5 dates can be included per request.
   * </pre>
   *
   * <code>repeated .google.type.Date dates = 1;</code>
   */
  @java.lang.Override
  public com.google.type.Date getDates(int index) {
    return dates_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of dates that match the media items' creation date. A maximum of
   * 5 dates can be included per request.
   * </pre>
   *
   * <code>repeated .google.type.Date dates = 1;</code>
   */
  @java.lang.Override
  public com.google.type.DateOrBuilder getDatesOrBuilder(int index) {
    return dates_.get(index);
  }

  public static final int RANGES_FIELD_NUMBER = 2;
  private java.util.List<com.google.photos.types.proto.DateRange> ranges_;
  /**
   *
   *
   * <pre>
   * List of dates ranges that match the media items' creation date. A
   * maximum of 5 dates ranges can be included per request.
   * </pre>
   *
   * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.photos.types.proto.DateRange> getRangesList() {
    return ranges_;
  }
  /**
   *
   *
   * <pre>
   * List of dates ranges that match the media items' creation date. A
   * maximum of 5 dates ranges can be included per request.
   * </pre>
   *
   * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.photos.types.proto.DateRangeOrBuilder>
      getRangesOrBuilderList() {
    return ranges_;
  }
  /**
   *
   *
   * <pre>
   * List of dates ranges that match the media items' creation date. A
   * maximum of 5 dates ranges can be included per request.
   * </pre>
   *
   * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
   */
  @java.lang.Override
  public int getRangesCount() {
    return ranges_.size();
  }
  /**
   *
   *
   * <pre>
   * List of dates ranges that match the media items' creation date. A
   * maximum of 5 dates ranges can be included per request.
   * </pre>
   *
   * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
   */
  @java.lang.Override
  public com.google.photos.types.proto.DateRange getRanges(int index) {
    return ranges_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of dates ranges that match the media items' creation date. A
   * maximum of 5 dates ranges can be included per request.
   * </pre>
   *
   * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
   */
  @java.lang.Override
  public com.google.photos.types.proto.DateRangeOrBuilder getRangesOrBuilder(int index) {
    return ranges_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < dates_.size(); i++) {
      output.writeMessage(1, dates_.get(i));
    }
    for (int i = 0; i < ranges_.size(); i++) {
      output.writeMessage(2, ranges_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < dates_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, dates_.get(i));
    }
    for (int i = 0; i < ranges_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, ranges_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.photos.library.v1.proto.DateFilter)) {
      return super.equals(obj);
    }
    com.google.photos.library.v1.proto.DateFilter other =
        (com.google.photos.library.v1.proto.DateFilter) obj;

    if (!getDatesList().equals(other.getDatesList())) return false;
    if (!getRangesList().equals(other.getRangesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDatesCount() > 0) {
      hash = (37 * hash) + DATES_FIELD_NUMBER;
      hash = (53 * hash) + getDatesList().hashCode();
    }
    if (getRangesCount() > 0) {
      hash = (37 * hash) + RANGES_FIELD_NUMBER;
      hash = (53 * hash) + getRangesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.DateFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.photos.library.v1.proto.DateFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * This filter defines the allowed dates or date ranges for the media returned.
   * It's possible to pick a set of specific dates and a set of date ranges.
   * </pre>
   *
   * Protobuf type {@code google.photos.library.v1.DateFilter}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.photos.library.v1.DateFilter)
      com.google.photos.library.v1.proto.DateFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_DateFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_DateFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.photos.library.v1.proto.DateFilter.class,
              com.google.photos.library.v1.proto.DateFilter.Builder.class);
    }

    // Construct using com.google.photos.library.v1.proto.DateFilter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getDatesFieldBuilder();
        getRangesFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (datesBuilder_ == null) {
        dates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        datesBuilder_.clear();
      }
      if (rangesBuilder_ == null) {
        ranges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        rangesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_DateFilter_descriptor;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.DateFilter getDefaultInstanceForType() {
      return com.google.photos.library.v1.proto.DateFilter.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.DateFilter build() {
      com.google.photos.library.v1.proto.DateFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.DateFilter buildPartial() {
      com.google.photos.library.v1.proto.DateFilter result =
          new com.google.photos.library.v1.proto.DateFilter(this);
      int from_bitField0_ = bitField0_;
      if (datesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dates_ = java.util.Collections.unmodifiableList(dates_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dates_ = dates_;
      } else {
        result.dates_ = datesBuilder_.build();
      }
      if (rangesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          ranges_ = java.util.Collections.unmodifiableList(ranges_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.ranges_ = ranges_;
      } else {
        result.ranges_ = rangesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.photos.library.v1.proto.DateFilter) {
        return mergeFrom((com.google.photos.library.v1.proto.DateFilter) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.photos.library.v1.proto.DateFilter other) {
      if (other == com.google.photos.library.v1.proto.DateFilter.getDefaultInstance()) return this;
      if (datesBuilder_ == null) {
        if (!other.dates_.isEmpty()) {
          if (dates_.isEmpty()) {
            dates_ = other.dates_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDatesIsMutable();
            dates_.addAll(other.dates_);
          }
          onChanged();
        }
      } else {
        if (!other.dates_.isEmpty()) {
          if (datesBuilder_.isEmpty()) {
            datesBuilder_.dispose();
            datesBuilder_ = null;
            dates_ = other.dates_;
            bitField0_ = (bitField0_ & ~0x00000001);
            datesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getDatesFieldBuilder()
                    : null;
          } else {
            datesBuilder_.addAllMessages(other.dates_);
          }
        }
      }
      if (rangesBuilder_ == null) {
        if (!other.ranges_.isEmpty()) {
          if (ranges_.isEmpty()) {
            ranges_ = other.ranges_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRangesIsMutable();
            ranges_.addAll(other.ranges_);
          }
          onChanged();
        }
      } else {
        if (!other.ranges_.isEmpty()) {
          if (rangesBuilder_.isEmpty()) {
            rangesBuilder_.dispose();
            rangesBuilder_ = null;
            ranges_ = other.ranges_;
            bitField0_ = (bitField0_ & ~0x00000002);
            rangesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getRangesFieldBuilder()
                    : null;
          } else {
            rangesBuilder_.addAllMessages(other.ranges_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.photos.library.v1.proto.DateFilter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.photos.library.v1.proto.DateFilter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.type.Date> dates_ = java.util.Collections.emptyList();

    private void ensureDatesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dates_ = new java.util.ArrayList<com.google.type.Date>(dates_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
        datesBuilder_;

    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public java.util.List<com.google.type.Date> getDatesList() {
      if (datesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dates_);
      } else {
        return datesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public int getDatesCount() {
      if (datesBuilder_ == null) {
        return dates_.size();
      } else {
        return datesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public com.google.type.Date getDates(int index) {
      if (datesBuilder_ == null) {
        return dates_.get(index);
      } else {
        return datesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder setDates(int index, com.google.type.Date value) {
      if (datesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDatesIsMutable();
        dates_.set(index, value);
        onChanged();
      } else {
        datesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder setDates(int index, com.google.type.Date.Builder builderForValue) {
      if (datesBuilder_ == null) {
        ensureDatesIsMutable();
        dates_.set(index, builderForValue.build());
        onChanged();
      } else {
        datesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder addDates(com.google.type.Date value) {
      if (datesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDatesIsMutable();
        dates_.add(value);
        onChanged();
      } else {
        datesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder addDates(int index, com.google.type.Date value) {
      if (datesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDatesIsMutable();
        dates_.add(index, value);
        onChanged();
      } else {
        datesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder addDates(com.google.type.Date.Builder builderForValue) {
      if (datesBuilder_ == null) {
        ensureDatesIsMutable();
        dates_.add(builderForValue.build());
        onChanged();
      } else {
        datesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder addDates(int index, com.google.type.Date.Builder builderForValue) {
      if (datesBuilder_ == null) {
        ensureDatesIsMutable();
        dates_.add(index, builderForValue.build());
        onChanged();
      } else {
        datesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder addAllDates(java.lang.Iterable<? extends com.google.type.Date> values) {
      if (datesBuilder_ == null) {
        ensureDatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, dates_);
        onChanged();
      } else {
        datesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder clearDates() {
      if (datesBuilder_ == null) {
        dates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        datesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public Builder removeDates(int index) {
      if (datesBuilder_ == null) {
        ensureDatesIsMutable();
        dates_.remove(index);
        onChanged();
      } else {
        datesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public com.google.type.Date.Builder getDatesBuilder(int index) {
      return getDatesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public com.google.type.DateOrBuilder getDatesOrBuilder(int index) {
      if (datesBuilder_ == null) {
        return dates_.get(index);
      } else {
        return datesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public java.util.List<? extends com.google.type.DateOrBuilder> getDatesOrBuilderList() {
      if (datesBuilder_ != null) {
        return datesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dates_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public com.google.type.Date.Builder addDatesBuilder() {
      return getDatesFieldBuilder().addBuilder(com.google.type.Date.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public com.google.type.Date.Builder addDatesBuilder(int index) {
      return getDatesFieldBuilder().addBuilder(index, com.google.type.Date.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of dates that match the media items' creation date. A maximum of
     * 5 dates can be included per request.
     * </pre>
     *
     * <code>repeated .google.type.Date dates = 1;</code>
     */
    public java.util.List<com.google.type.Date.Builder> getDatesBuilderList() {
      return getDatesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
        getDatesFieldBuilder() {
      if (datesBuilder_ == null) {
        datesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>(
                dates_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        dates_ = null;
      }
      return datesBuilder_;
    }

    private java.util.List<com.google.photos.types.proto.DateRange> ranges_ =
        java.util.Collections.emptyList();

    private void ensureRangesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        ranges_ = new java.util.ArrayList<com.google.photos.types.proto.DateRange>(ranges_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.photos.types.proto.DateRange,
            com.google.photos.types.proto.DateRange.Builder,
            com.google.photos.types.proto.DateRangeOrBuilder>
        rangesBuilder_;

    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public java.util.List<com.google.photos.types.proto.DateRange> getRangesList() {
      if (rangesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ranges_);
      } else {
        return rangesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public int getRangesCount() {
      if (rangesBuilder_ == null) {
        return ranges_.size();
      } else {
        return rangesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public com.google.photos.types.proto.DateRange getRanges(int index) {
      if (rangesBuilder_ == null) {
        return ranges_.get(index);
      } else {
        return rangesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder setRanges(int index, com.google.photos.types.proto.DateRange value) {
      if (rangesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRangesIsMutable();
        ranges_.set(index, value);
        onChanged();
      } else {
        rangesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder setRanges(
        int index, com.google.photos.types.proto.DateRange.Builder builderForValue) {
      if (rangesBuilder_ == null) {
        ensureRangesIsMutable();
        ranges_.set(index, builderForValue.build());
        onChanged();
      } else {
        rangesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder addRanges(com.google.photos.types.proto.DateRange value) {
      if (rangesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRangesIsMutable();
        ranges_.add(value);
        onChanged();
      } else {
        rangesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder addRanges(int index, com.google.photos.types.proto.DateRange value) {
      if (rangesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRangesIsMutable();
        ranges_.add(index, value);
        onChanged();
      } else {
        rangesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder addRanges(com.google.photos.types.proto.DateRange.Builder builderForValue) {
      if (rangesBuilder_ == null) {
        ensureRangesIsMutable();
        ranges_.add(builderForValue.build());
        onChanged();
      } else {
        rangesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder addRanges(
        int index, com.google.photos.types.proto.DateRange.Builder builderForValue) {
      if (rangesBuilder_ == null) {
        ensureRangesIsMutable();
        ranges_.add(index, builderForValue.build());
        onChanged();
      } else {
        rangesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder addAllRanges(
        java.lang.Iterable<? extends com.google.photos.types.proto.DateRange> values) {
      if (rangesBuilder_ == null) {
        ensureRangesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, ranges_);
        onChanged();
      } else {
        rangesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder clearRanges() {
      if (rangesBuilder_ == null) {
        ranges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        rangesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public Builder removeRanges(int index) {
      if (rangesBuilder_ == null) {
        ensureRangesIsMutable();
        ranges_.remove(index);
        onChanged();
      } else {
        rangesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public com.google.photos.types.proto.DateRange.Builder getRangesBuilder(int index) {
      return getRangesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public com.google.photos.types.proto.DateRangeOrBuilder getRangesOrBuilder(int index) {
      if (rangesBuilder_ == null) {
        return ranges_.get(index);
      } else {
        return rangesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public java.util.List<? extends com.google.photos.types.proto.DateRangeOrBuilder>
        getRangesOrBuilderList() {
      if (rangesBuilder_ != null) {
        return rangesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ranges_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public com.google.photos.types.proto.DateRange.Builder addRangesBuilder() {
      return getRangesFieldBuilder()
          .addBuilder(com.google.photos.types.proto.DateRange.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public com.google.photos.types.proto.DateRange.Builder addRangesBuilder(int index) {
      return getRangesFieldBuilder()
          .addBuilder(index, com.google.photos.types.proto.DateRange.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of dates ranges that match the media items' creation date. A
     * maximum of 5 dates ranges can be included per request.
     * </pre>
     *
     * <code>repeated .google.photos.types.DateRange ranges = 2;</code>
     */
    public java.util.List<com.google.photos.types.proto.DateRange.Builder> getRangesBuilderList() {
      return getRangesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.photos.types.proto.DateRange,
            com.google.photos.types.proto.DateRange.Builder,
            com.google.photos.types.proto.DateRangeOrBuilder>
        getRangesFieldBuilder() {
      if (rangesBuilder_ == null) {
        rangesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.photos.types.proto.DateRange,
                com.google.photos.types.proto.DateRange.Builder,
                com.google.photos.types.proto.DateRangeOrBuilder>(
                ranges_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        ranges_ = null;
      }
      return rangesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.photos.library.v1.DateFilter)
  }

  // @@protoc_insertion_point(class_scope:google.photos.library.v1.DateFilter)
  private static final com.google.photos.library.v1.proto.DateFilter DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.photos.library.v1.proto.DateFilter();
  }

  public static com.google.photos.library.v1.proto.DateFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DateFilter> PARSER =
      new com.google.protobuf.AbstractParser<DateFilter>() {
        @java.lang.Override
        public DateFilter parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DateFilter(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<DateFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DateFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.photos.library.v1.proto.DateFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

public interface FiltersOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.photos.library.v1.Filters)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Filters the media items based on their creation date.
   * </pre>
   *
   * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
   *
   * @return Whether the dateFilter field is set.
   */
  boolean hasDateFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on their creation date.
   * </pre>
   *
   * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
   *
   * @return The dateFilter.
   */
  com.google.photos.library.v1.proto.DateFilter getDateFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on their creation date.
   * </pre>
   *
   * <code>.google.photos.library.v1.DateFilter date_filter = 1;</code>
   */
  com.google.photos.library.v1.proto.DateFilterOrBuilder getDateFilterOrBuilder();

  /**
   *
   *
   * <pre>
   * Filters the media items based on their content.
   * </pre>
   *
   * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
   *
   * @return Whether the contentFilter field is set.
   */
  boolean hasContentFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on their content.
   * </pre>
   *
   * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
   *
   * @return The contentFilter.
   */
  com.google.photos.library.v1.proto.ContentFilter getContentFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on their content.
   * </pre>
   *
   * <code>.google.photos.library.v1.ContentFilter content_filter = 2;</code>
   */
  com.google.photos.library.v1.proto.ContentFilterOrBuilder getContentFilterOrBuilder();

  /**
   *
   *
   * <pre>
   * Filters the media items based on the type of media.
   * </pre>
   *
   * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
   *
   * @return Whether the mediaTypeFilter field is set.
   */
  boolean hasMediaTypeFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on the type of media.
   * </pre>
   *
   * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
   *
   * @return The mediaTypeFilter.
   */
  com.google.photos.library.v1.proto.MediaTypeFilter getMediaTypeFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on the type of media.
   * </pre>
   *
   * <code>.google.photos.library.v1.MediaTypeFilter media_type_filter = 3;</code>
   */
  com.google.photos.library.v1.proto.MediaTypeFilterOrBuilder getMediaTypeFilterOrBuilder();

  /**
   *
   *
   * <pre>
   * Filters the media items based on their features.
   * </pre>
   *
   * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
   *
   * @return Whether the featureFilter field is set.
   */
  boolean hasFeatureFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on their features.
   * </pre>
   *
   * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
   *
   * @return The featureFilter.
   */
  com.google.photos.library.v1.proto.FeatureFilter getFeatureFilter();
  /**
   *
   *
   * <pre>
   * Filters the media items based on their features.
   * </pre>
   *
   * <code>.google.photos.library.v1.FeatureFilter feature_filter = 7;</code>
   */
  com.google.photos.library.v1.proto.FeatureFilterOrBuilder getFeatureFilterOrBuilder();

  /**
   *
   *
   * <pre>
   * If set, the results include media items that the user has archived.
   * Defaults to false (archived media items aren't included).
   * </pre>
   *
   * <code>bool include_archived_media = 4;</code>
   *
   * @return The includeArchivedMedia.
   */
  boolean getIncludeArchivedMedia();

  /**
   *
   *
   * <pre>
   * If set, the results exclude media items that were not created by this app.
   * Defaults to false (all media items are returned). This field is ignored if
   * the photoslibrary.readonly.appcreateddata scope is used.
   * </pre>
   *
   * <code>bool exclude_non_app_created_data = 5;</code>
   *
   * @return The excludeNonAppCreatedData.
   */
  boolean getExcludeNonAppCreatedData();
}

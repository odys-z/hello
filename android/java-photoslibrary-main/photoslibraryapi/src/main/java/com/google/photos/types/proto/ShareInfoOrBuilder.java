// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/types/album.proto

package com.google.photos.types.proto;

public interface ShareInfoOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.photos.types.ShareInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Options that control whether someone can add media items to, or comment on
   * a shared album.
   * </pre>
   *
   * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 1;</code>
   *
   * @return Whether the sharedAlbumOptions field is set.
   */
  boolean hasSharedAlbumOptions();
  /**
   *
   *
   * <pre>
   * Options that control whether someone can add media items to, or comment on
   * a shared album.
   * </pre>
   *
   * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 1;</code>
   *
   * @return The sharedAlbumOptions.
   */
  com.google.photos.types.proto.SharedAlbumOptions getSharedAlbumOptions();
  /**
   *
   *
   * <pre>
   * Options that control whether someone can add media items to, or comment on
   * a shared album.
   * </pre>
   *
   * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 1;</code>
   */
  com.google.photos.types.proto.SharedAlbumOptionsOrBuilder getSharedAlbumOptionsOrBuilder();

  /**
   *
   *
   * <pre>
   * A link to the shared Google Photos album. Anyone with the link can view the
   * contents of the album, so it should be treated with care.
   * The `shareableUrl` parameter is only returned if the album has link sharing
   * turned on. If a user is already joined to an album that isn't link-shared,
   * they can use the album's
   * [`productUrl`](https://developers.google.com/photos/library/reference/rest/v1/albums#Album)
   * to access it instead.
   * A `shareableUrl` is invalidated if the owner turns off link sharing in the
   * Google Photos app, or if the album is unshared.
   * </pre>
   *
   * <code>string shareable_url = 2;</code>
   *
   * @return The shareableUrl.
   */
  java.lang.String getShareableUrl();
  /**
   *
   *
   * <pre>
   * A link to the shared Google Photos album. Anyone with the link can view the
   * contents of the album, so it should be treated with care.
   * The `shareableUrl` parameter is only returned if the album has link sharing
   * turned on. If a user is already joined to an album that isn't link-shared,
   * they can use the album's
   * [`productUrl`](https://developers.google.com/photos/library/reference/rest/v1/albums#Album)
   * to access it instead.
   * A `shareableUrl` is invalidated if the owner turns off link sharing in the
   * Google Photos app, or if the album is unshared.
   * </pre>
   *
   * <code>string shareable_url = 2;</code>
   *
   * @return The bytes for shareableUrl.
   */
  com.google.protobuf.ByteString getShareableUrlBytes();

  /**
   *
   *
   * <pre>
   * A token that is used to join, leave, or retrieve the details of a shared
   * album on behalf of a user who isn't the owner.
   * A `shareToken` is invalidated if the owner turns off link sharing in the
   * Google Photos app, or if the album is unshared.
   * </pre>
   *
   * <code>string share_token = 3;</code>
   *
   * @return The shareToken.
   */
  java.lang.String getShareToken();
  /**
   *
   *
   * <pre>
   * A token that is used to join, leave, or retrieve the details of a shared
   * album on behalf of a user who isn't the owner.
   * A `shareToken` is invalidated if the owner turns off link sharing in the
   * Google Photos app, or if the album is unshared.
   * </pre>
   *
   * <code>string share_token = 3;</code>
   *
   * @return The bytes for shareToken.
   */
  com.google.protobuf.ByteString getShareTokenBytes();

  /**
   *
   *
   * <pre>
   * True if the user is joined to the album. This is always true for
   * the owner of the album.
   * </pre>
   *
   * <code>bool is_joined = 4;</code>
   *
   * @return The isJoined.
   */
  boolean getIsJoined();

  /**
   *
   *
   * <pre>
   * True if the user owns the album.
   * </pre>
   *
   * <code>bool is_owned = 5;</code>
   *
   * @return The isOwned.
   */
  boolean getIsOwned();

  /**
   *
   *
   * <pre>
   * True if the album can be joined by users.
   * </pre>
   *
   * <code>bool is_joinable = 6;</code>
   *
   * @return The isJoinable.
   */
  boolean getIsJoinable();
}

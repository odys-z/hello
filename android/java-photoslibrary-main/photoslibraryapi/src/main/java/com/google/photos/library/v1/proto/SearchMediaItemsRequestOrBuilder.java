// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

public interface SearchMediaItemsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.photos.library.v1.SearchMediaItemsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Identifier of an album. If populated, lists all media items in
   * specified album. Can't set in conjunction with any filters.
   * </pre>
   *
   * <code>string album_id = 1;</code>
   *
   * @return The albumId.
   */
  java.lang.String getAlbumId();
  /**
   *
   *
   * <pre>
   * Identifier of an album. If populated, lists all media items in
   * specified album. Can't set in conjunction with any filters.
   * </pre>
   *
   * <code>string album_id = 1;</code>
   *
   * @return The bytes for albumId.
   */
  com.google.protobuf.ByteString getAlbumIdBytes();

  /**
   *
   *
   * <pre>
   * Maximum number of media items to return in the response. Fewer media items
   * might be returned than the specified number. The default `pageSize` is 25,
   * the maximum is 100.
   * </pre>
   *
   * <code>int32 page_size = 2;</code>
   *
   * @return The pageSize.
   */
  int getPageSize();

  /**
   *
   *
   * <pre>
   * A continuation token to get the next page of the results. Adding this to
   * the request returns the rows after the `pageToken`. The `pageToken` should
   * be the value returned in the `nextPageToken` parameter in the response to
   * the `searchMediaItems` request.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   *
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   *
   *
   * <pre>
   * A continuation token to get the next page of the results. Adding this to
   * the request returns the rows after the `pageToken`. The `pageToken` should
   * be the value returned in the `nextPageToken` parameter in the response to
   * the `searchMediaItems` request.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   *
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString getPageTokenBytes();

  /**
   *
   *
   * <pre>
   * Filters to apply to the request. Can't be set in conjunction with an
   * `albumId`.
   * </pre>
   *
   * <code>.google.photos.library.v1.Filters filters = 4;</code>
   *
   * @return Whether the filters field is set.
   */
  boolean hasFilters();
  /**
   *
   *
   * <pre>
   * Filters to apply to the request. Can't be set in conjunction with an
   * `albumId`.
   * </pre>
   *
   * <code>.google.photos.library.v1.Filters filters = 4;</code>
   *
   * @return The filters.
   */
  com.google.photos.library.v1.proto.Filters getFilters();
  /**
   *
   *
   * <pre>
   * Filters to apply to the request. Can't be set in conjunction with an
   * `albumId`.
   * </pre>
   *
   * <code>.google.photos.library.v1.Filters filters = 4;</code>
   */
  com.google.photos.library.v1.proto.FiltersOrBuilder getFiltersOrBuilder();

  /**
   *
   *
   * <pre>
   * An optional field to specify the sort order of the search results. The
   * `orderBy` field only works when a
   * [dateFilter][google.photos.library.v1.DateFilter] is used. When this
   * field is not specified, results are displayed newest first, oldest last by
   * their [creationTime][google.photos.types.MediaMetadata.creation_time].
   * Providing `MediaMetadata.creation_time` displays search results in
   * the opposite order, oldest first then newest last.
   * To display results newest first then oldest last, include the `desc`
   * argument as follows: `MediaMetadata.creation_time desc`.
   * The only additional filters that can be used with this parameter are
   * [includeArchivedMedia][google.photos.library.v1.Filters.include_archived_media]
   * and
   * [excludeNonAppCreatedData][google.photos.library.v1.Filters.exclude_non_app_created_data].
   * No other filters are supported.
   * </pre>
   *
   * <code>string order_by = 5;</code>
   *
   * @return The orderBy.
   */
  java.lang.String getOrderBy();
  /**
   *
   *
   * <pre>
   * An optional field to specify the sort order of the search results. The
   * `orderBy` field only works when a
   * [dateFilter][google.photos.library.v1.DateFilter] is used. When this
   * field is not specified, results are displayed newest first, oldest last by
   * their [creationTime][google.photos.types.MediaMetadata.creation_time].
   * Providing `MediaMetadata.creation_time` displays search results in
   * the opposite order, oldest first then newest last.
   * To display results newest first then oldest last, include the `desc`
   * argument as follows: `MediaMetadata.creation_time desc`.
   * The only additional filters that can be used with this parameter are
   * [includeArchivedMedia][google.photos.library.v1.Filters.include_archived_media]
   * and
   * [excludeNonAppCreatedData][google.photos.library.v1.Filters.exclude_non_app_created_data].
   * No other filters are supported.
   * </pre>
   *
   * <code>string order_by = 5;</code>
   *
   * @return The bytes for orderBy.
   */
  com.google.protobuf.ByteString getOrderByBytes();
}
